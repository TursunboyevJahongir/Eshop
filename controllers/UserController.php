<?php
/**
 * Created by PhpStorm.
 * User: Jahongir
 * Date: 23.09.2019
 * Time: 18:54
 */

namespace app\controllers;


use app\models\ResponseJSON;
use app\models\User;
use Yii;
use yii\base\InvalidArgumentException;
use yii\db\Exception;
use yii\db\StaleObjectException;
use yii\rest\ActiveController;
use yii\web\Controller;
use yii\web\NotFoundHttpException;
use yii\web\Response;

class UserController extends Controller
{
    public $modelClass = 'app\models\User';

    public function beforeAction($action)
    {

        Yii::$app->request->enableCsrfValidation = false;
        return parent::beforeAction($action); // TODO: Change the autogenerated stub
    }

    public function actionGet($id = null)
    {
        Yii::$app->response->format = Response::FORMAT_JSON;
        if($id == null) {
            $model = User::find()->all();
            $response = new ResponseJSON();
            $response->status = 'ok';
            $response->data = $model;
            return $response;
        }
        else
        {
            if ($id !== null && is_numeric($id)) {
                $model = User::findOne(['id' => $id]);
                if ($model === null) {
                    throw new NotFoundHttpException('topilmadi');
                }
                return $model;
            }
        }
    }


    public function actionCreate()
    {
        Yii::$app->response->format = Response::FORMAT_JSON;


        $model = new User();
        if ($model->load(Yii::$app->getRequest()->getBodyParams(), '') && $model->validate()) {
            $model->save();
            return ['status' => 'ok'];
        } else
            return ['status' => 'error', 'message' => $model->getErrors()];
    }

    public function actionUpdate($id)
    {
        Yii::$app->response->format = Response::FORMAT_JSON;
        if ($id !== null && is_numeric($id)) {
            $model = User::findOne(['id' => $id]);
            if ($model === null) {
                throw new NotFoundHttpException('topilmadi');
            }
            if ($model->load(Yii::$app->getRequest()->getBodyParams(), '') && $model->validate()) {
                $model->save();
                return ['status' => 'ok'];
            } else
                return ['status' => 'error', 'message' => $model->getErrors()];
        }
    }

    /**
     * @param $id
     * @return array
     * @throws \Throwable
     * @throws \yii\db\StaleObjectException
     */
    public function actionDelete($id)
    {
        if (Yii::$app->request->isDelete) {
            Yii::$app->response->format = Response::FORMAT_JSON;
            $model = User::findOne(['id' => $id]);
            if ($id !== null) {
                $deleted = $model->delete();
                return $deleted !== false ? ['status' => 'deleted'] : ['status' => 'error'];
            } else {
                return ['status' => 'error'];
            }
        }

    }


}
